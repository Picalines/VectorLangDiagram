@using VectorLang.Model

<div style="display: flex; width: 100%; height: 100%"
    @onwheel="OnWheel"
>
    <svg xmlns="http://www.w3.org/2000/svg"
        viewBox="@SVGLength(-ViewScale) @SVGLength(-ViewScale) @SVGLength(ViewScale) @SVGLength(ViewScale)"
        preserveAspectRatio="xMidYMid slice"
        id="vectors"
    >
        <g transform="translate(@SVGLength(-ViewScale / 2 + OffsetX), @SVGLength(-ViewScale / 2 + OffsetY))">
            @foreach (var vector in Vectors)
            {
                <PlottedVectorView Vector=vector />
            }
        </g>
    </svg>
</div>

@code {
    private const double MinZoom = 0.001;

    private const double MaxZoom = 0.1;

    private const double ZoomSensitivity = 0.0001;

    private const double OffsetSensitivity = 0.01;

    [Parameter]
    public IReadOnlyList<PlottedVector> Vectors { get; set; } = Array.Empty<PlottedVector>();

    private double Zoom = 0.01;

    private double OffsetX = 0;

    private double OffsetY = 0;

    private double ViewScale => 1 / Zoom;

    private void OnWheel(WheelEventArgs args)
    {
        if (args.CtrlKey)
        {
            Zoom += args.DeltaY * ZoomSensitivity;
            Zoom = Math.Clamp(Zoom, MinZoom, MaxZoom);
        }
        else
        {
            OffsetX += -args.DeltaX * OffsetSensitivity;
            OffsetY += -args.DeltaY * OffsetSensitivity;
        }
    }

    private static string SVGLength(double value) => value.ToString(System.Globalization.CultureInfo.InvariantCulture);
}
