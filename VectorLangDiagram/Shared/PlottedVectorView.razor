@using System.Drawing
@using VectorLang.Model

@{
    var color = CSSColor;

    var x = ToSVGLength(Vector.Coordinates.X);
    var y = ToSVGLength(-Vector.Coordinates.Y);

    var strokeWidth = ToSVGLength(Math.Clamp(VectorLength, 0.2, 0.7) / 10);
}

@if (VectorLength > 0)
{
    <marker id="arrow-@color" markerWidth=5 markerHeight=5
            refX=3 refY=3 orient="auto">
        <line x1=3 y1=3 x2=1 y2=2 stroke=@color stroke-linecap=round />
        <line x1=3 y1=3 x2=1 y2=4 stroke=@color stroke-linecap=round />
    </marker>

    <line x1=0 y1=0 x2=@x y2=@y
        stroke=@color stroke-width=@strokeWidth stroke-linecap=round
        marker-end="url(#arrow-@color)"/>
}
else
{
    <circle cx=@x cy=@y r=@strokeWidth fill=@color />
}

<!-- TODO: text -->

@code {
    [Parameter]
    public PlottedVector Vector { get; set; } = new((1, 1), "label", (1, 1, 1));

    private double VectorLength
    {
        get
        {
            var (x, y) = Vector.Coordinates;
            return Math.Sqrt(x * x + y * y);
        }
    }

    private string CSSColor
    {
        get
        {
            var (r, g, b) = Vector.Color;
            return ColorTranslator.ToHtml(Color.FromArgb((int)(r * 255), (int)(g * 255), (int)(b * 255)));
        }
    }

    private static string ToSVGLength(double value) => value.ToString(System.Globalization.CultureInfo.InvariantCulture);
}
