@using VectorLang
@using VectorLangDocs.Shared.DocumentationModel

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div id="viewer-root">
    <nav>
        <h3>Navigation</h3>
        @foreach (var item in Items)
        {
            <a href=@DocumentationItemView.HeaderUriOf(item, NavigationManager.Uri)>
                @GetFormattedItemName(item)
            </a>
        }
    </nav>
    <div id="item-list">
        @foreach (var item in Items)
        {
            <DocumentationItemView Item="item" />
        }
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public IEnumerable<DocumentationItem> Items { get; set; } = null!;

    private string GetFormattedItemName(DocumentationItem item)
    {
        return item switch
        {
            InstanceUnaryOperatorDocumentation unaryOperator => unaryOperator.UnaryOperator.GetFormatted(unaryOperator.InstanceTypeDocumentation.Name),
            InstanceBinaryOperatorDocumentation binaryOperator => binaryOperator.BinaryOperator.GetFormatted(binaryOperator.LeftTypeDocumentation.Name, binaryOperator.RightTypeDocumentation.Name),
            IMemberDocumentationItem member => $"{member.InstanceTypeDocumentation.Name}.{item.Name}",
            _ => item.Name,
        };
    }
}
